spring.application.name=resource-service

server.port=${RESOURCE_SERVICE_PORT}
server.forward-headers-strategy=NATIVE

#spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
# This will force hikari to wait for database and won't kill process
# when backend starts before database in docker-compose
spring.datasource.hikari.initializationFailTimeout=0

jwt.public-key=${JWT_PUBLIC_KEY}

logging.level.org.springframework.web=DEBUG

eureka.client.serviceUrl.defaultZone=${DISCOVERY_SERVICE_URL}
eureka.instance.prefer-ip-address=true

spring.mvc.static-path-pattern=/content/**
server.servlet.context-path=/api
  
#Generate hibernate schema TODO: extract this to application-dev.properties
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=resource_schema.sql